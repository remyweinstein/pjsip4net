<?xml version="1.0" encoding="utf-8"?>
<project name="CUSTOM REPLACE MOMA" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="path.to.toplevel" value="..\.." />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="dirs.build_scripts" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts}" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_build}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="folder.database" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="dirs.database" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.database}" overwrite="false" />
  <property name="folder.reports" value="${project.name}.Reports" overwrite="false" />
  <property name="dirs.reports" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.reports}" overwrite="false" />
  <property name="folder.file_server" value="file.server" overwrite="false" />
  <property name="dirs.file_server" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.file_server}" overwrite="false" />
  <property name="folder.environment_files" value="environment.files" overwrite="false" />
  <property name="dirs.environment_files" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.environment_files}" overwrite="false" />
  <property name="folder.deployment" value="deployment" overwrite="false" />
  <property name="dirs.deployment" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.deployment}" overwrite="false" />
  <property name="folder.settings" value="settings" overwrite="false" />
  <property name="dirs.settings" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.settings}" overwrite="false" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="dirs.docs" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.documentation}" overwrite="false" />
  <property name="folder.references" value="lib" overwrite="false" />
  <property name="dirs.lib" value="${dirs.current}${path.separator}${path.to.toplevel}${path.separator}${folder.references}" overwrite="false" />
  <target name="go" depends="run_tasks" />
  <target name="run_tasks">
    <call target="prepare" if="${target::exists('prepare')}" />
	<call target="run_normal_tasks"/>
  </target>
  <target name="prepare">
    <echo message="Removing and adding ${dirs.moma_results}."/>
    <delete dir="${dirs.moma_results}" failonerror="false" />
    <mkdir dir="${dirs.moma_results}" />
  </target>

  <target name="run_normal_tasks"
          depends="get_regular_dlls, moma"
          description="Using Mono Migration Analyzer to Analyze project for ability to run cross platform."
          if="${file::exists(app.moma)}" />

  <target name="get_regular_dlls">
    <echo message="Getting output dlls based on name in directory ${path::get-full-path(dirs.build.code)}." />
    <property name="dll.names" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.build.code}${path.separator}lib${path.separator}**" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}NUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}MbUnit*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}TestFu.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}QuickGraph*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Refly*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Rhino.Mocks*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*bdd*.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Test*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}*Spec*dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}pjsua.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}ssleay32.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}libeay32.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}log4net.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}AutoMapper.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Castle.Core.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Castle.Windsor.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Magnum.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Ploeh.AutoFixture.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Ploeh.AutoFixture.AutoMoq.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}System.Core.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Moq.dll" />
          <exclude name="${dirs.build.code}${path.separator}**${path.separator}Common.Logging.dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*.dll" />
          <include name="${dirs.build.code}${path.separator}**${path.separator}*.exe" />
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + string::replace(string::replace(dll.filename,path::get-full-path(dirs.build.code) + '\',''),'\',path.separator) + ''}" />
      </do>
    </foreach>

    <property name="dlls.regular" value="${dll.names}" />
    <echo message="Running Mono Migration Analyzer against these files - ${dlls.regular}." />

    <property name="args.moma" value="${args.moma} ${dlls.regular}" />
  </target>

  <target name="moma" if="${file::exists(app.moma)}" >
    <echo message="Attempting to run Mono Migration Analyzer. Creating file at ${file.moma_results} and logging at ${file.moma_log}." />

    <exec program="${app.moma}"
          workingdir="${dirs.build.code}"
          >
      <arg line="${args.moma}" />
    </exec>

  </target>

  <target name="open_results">
    <echo message="Opening results - ${path::get-full-path(dirs.moma_results) + path.separator + file.moma_results}."/>
    <results display="${path::get-full-path(dirs.moma_results) + path.separator + file.moma_results}" />
  </target>
</project>